using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using POS.EPL;

namespace POS.PL
{
    public partial class FrmCategory : Form
    {
        DB_SMP db_smp =new DB_SMP();
        TB_catogary tbcatogary = new TB_catogary();
        BL.LibraryProject lp = new BL.LibraryProject();
        EPL.FrmDialog dlg = new EPL.FrmDialog();
        EPL.FrmToast toast = new FrmToast();
        public int id;
        public FrmCategory()
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            POS.DB_SMP dbContext = new POS.DB_SMP();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_catogary.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControltable.DataSource = dbContext.TB_catogary.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btnInsert_Click(object sender, EventArgs e)
        {
            PL.FrmCatorgyAdd catorgyAdd = new FrmCatorgyAdd();
            catorgyAdd.ID = 0;
            catorgyAdd.btnInsert.Text = "ADD";
            catorgyAdd.Show();
        }

        private void btnUpdata_Click(object sender, EventArgs e)
        {
            PL.FrmCatorgyAdd catorgyAdd = new FrmCatorgyAdd();
            id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("ID"));
            tbcatogary = db_smp.TB_catogary.Where(x => x.ID == id).FirstOrDefault();
            catorgyAdd.txtNameADD.Text = tbcatogary.cat_name.ToString();
            lp.by = tbcatogary.cat_cover;
            catorgyAdd.image_edit.Image = Image.FromStream(lp.convetImg());
            catorgyAdd.ID = id;
            catorgyAdd.btnInsert.Text = "UPDATA";
            catorgyAdd.Show();
        }

        private void btndelete_Click(object sender, EventArgs e)
        {
            EPL.FrmToast frmToast = new FrmToast();
            EPL.FrmDialog frmdialog = new FrmDialog();
            try
            {
                id = Convert.ToInt32(tileView1.GetFocusedRowCellValue("ID"));
                DialogResult result = MessageBox.Show("Are Sure Of The Deleting Process", "Deletion process", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation);
                if (result == DialogResult.Yes)
                {
                    tbcatogary = db_smp.TB_catogary.Where(x => x.ID == id).FirstOrDefault();
                    db_smp.Entry(tbcatogary).State = EntityState.Deleted;
                    db_smp.SaveChanges();
                    toast.txtCaption.Text = "has been deleted supplier ";
                    toast.Show();
                    UpdateData();
                }
            }
            catch 
            {
                frmdialog.txtCaption.Text = "There Is No Category To Delete";
                frmdialog.Width = this.Width;
                frmdialog.Show();
            }
        }

        private void btnreload_Click(object sender, EventArgs e)
        {
            UpdateData();
        }
        public void UpdateData()
        {
            db_smp = new DB_SMP();
            gridControltable.DataSource = db_smp.TB_catogary.ToList();
        }

        private void btnsearch_Click(object sender, EventArgs e)
        {
            var _search = txtsearch.Text;

            gridControltable.DataSource = db_smp.TB_catogary.Where(x => x.cat_name.Contains(_search)).ToList();
        }
    }
}
