using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using POS.EPL;

namespace POS.PL
{
    public partial class FrmPurchases: Form
    {
        DB_SMP db_smp =new DB_SMP();
        TB_Pur tb_Pur = new TB_Pur();
        BL.LibraryProject lp = new BL.LibraryProject();
        EPL.FrmDialog dlg = new EPL.FrmDialog();
        EPL.FrmToast  toast =  new  FrmToast();
        public int id;
        public FrmPurchases()
        {
            InitializeComponent();

            
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            POS.DB_SMP dbContext = new POS.DB_SMP();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_Pur.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControltable.DataSource = dbContext.TB_Pur.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btnInsert_Click(object sender, EventArgs e)
        {
            PL.Frm_puradd frmpurchasesAdd = new Frm_puradd();
            frmpurchasesAdd.ID = 0;
            frmpurchasesAdd.btn_insert.Text = "ADD";
            frmpurchasesAdd.Show();
        }

        private void btnUpdata_Click(object sender, EventArgs e)
        {
            PL.Frm_puradd frmpurchasesAdd = new Frm_puradd();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID"));
            tb_Pur = db_smp.TB_Pur.Where(x => x.ID == id).FirstOrDefault();
            frmpurchasesAdd.txtname.Text = tb_Pur.pur_Name;
            frmpurchasesAdd.txt_type.Text = tb_Pur.Pur_type;
            frmpurchasesAdd.com_cat.Text = tb_Pur.Pur_Cat;
            frmpurchasesAdd.com_supp.Text = tb_Pur.Pur_Supp;
            frmpurchasesAdd.txt_det.Text = tb_Pur.Pur_Det;
            frmpurchasesAdd.edt_buy.Text = tb_Pur.Pur_Buy.ToString();
            frmpurchasesAdd.edt_sell.Text = tb_Pur.Pur__sell.ToString();
            frmpurchasesAdd.edt_qt.Text = tb_Pur.Pur_Qt.ToString();
            frmpurchasesAdd.edt_tsell.Text = tb_Pur.Pur_Tsell.ToString();
            frmpurchasesAdd.edt_tbuy.Text = tb_Pur.Pur_Tbuy.ToString();
            frmpurchasesAdd.edt_trev.Text = tb_Pur.Pur_TRev.ToString();
            //frmpurchasesAdd.imageuser.Image = Image.FromStream(lp.convetImg());
            frmpurchasesAdd.ID = id;
            frmpurchasesAdd.btn_insert.Text = "UPDATA";
            frmpurchasesAdd.Show();
        }

        private void btndelete_Click(object sender, EventArgs e)
        {
            EPL.FrmToast frmToast = new FrmToast();
            EPL.FrmDialog frmdialog = new FrmDialog();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID"));
            if (id > 0)
            {
                try
                {
                    DialogResult result = MessageBox.Show("Are Sure Of The Deleting Process", "Deletion process", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation);
                    if (result == DialogResult.Yes)
                    {
                        tb_Pur = db_smp.TB_Pur.Where(x => x.ID == id).FirstOrDefault();
                        db_smp.Entry(tb_Pur).State = EntityState.Deleted;
                        db_smp.SaveChanges();
                        toast.txtCaption.Text = "has been deleted supplier ";
                        toast.Show();
                        UpdateData();
                    }
                }
                catch
                {
                    //    frmdialog.txtCaption.Text = "There is no purchase to delete";
                    //    frmdialog.Width = this.Width;
                    //    frmdialog.Show();
                }
            }
        }

        private void btnreload_Click(object sender, EventArgs e)
        {
            UpdateData();
        }
        public void UpdateData()
        {
            db_smp = new DB_SMP();
            gridControltable.DataSource = db_smp.TB_Pur.ToList();
        }

        private void btnsearch_Click(object sender, EventArgs e)
        {
            var _search = txtsearch.Text;

            gridControltable.DataSource = db_smp.TB_Pur.Where(x => x.pur_Name.Contains(_search)|| x.Pur_type.Contains(_search)).ToList();
        }
    }
}
