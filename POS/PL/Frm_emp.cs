using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;
using POS.EPL;

namespace POS.PL
{
    public partial class Frm_emp : Form
    {
        DB_SMP db_smp =new DB_SMP();
        TB_User tb_user = new TB_User();
        BL.LibraryProject lp = new BL.LibraryProject();
        EPL.FrmDialog dlg = new EPL.FrmDialog();
        EPL.FrmToast  toast =  new  FrmToast();
        public int id;
        public Frm_emp()
        {
            InitializeComponent();


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            POS.DB_SMP dbContext = new POS.DB_SMP();
            // Call the LoadAsync method to asynchronously get the data for the given DbSet from the database.
            dbContext.TB_User.LoadAsync().ContinueWith(loadTask =>
            {
    // Bind data to control when loading complete
    gridControltable.DataSource = dbContext.TB_User.Local.ToBindingList();
            }, System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext());
        }

        private void btnInsert_Click(object sender, EventArgs e)
        {
            PL.Frm_empAdd frmempadd = new Frm_empAdd();
            frmempadd.ID = 0;
            frmempadd.btn_insert.Text = "ADD";
            frmempadd.Show();
        }

        private void btnUpdata_Click(object sender, EventArgs e)
        {
            PL.Frm_empAdd frmempadd = new Frm_empAdd();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID"));
            tb_user = db_smp.TB_User.Where(x => x.ID == id).FirstOrDefault();
            frmempadd.txt_user.Text = tb_user.User_Name;
            frmempadd.txtPassword.Text = tb_user.User_Pass;
            frmempadd.txt_roll.Text = tb_user.User_Roll;
            frmempadd.ID = id;
            frmempadd.btn_insert.Text = "UPDATA";
            frmempadd.Show();
        }

        private void btndelete_Click(object sender, EventArgs e)
        {
            EPL.FrmToast frmToast = new FrmToast();
            EPL.FrmDialog frmdialog = new FrmDialog();
            id = Convert.ToInt32(gridView1.GetFocusedRowCellValue("ID"));
            if (id > 0)
            {
                try
                {
                    DialogResult result = MessageBox.Show("Are Sure Of The Deleting Process", "Deletion process", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation);
                    if (result == DialogResult.Yes)
                    {
                        tb_user = db_smp.TB_User.Where(x => x.ID == id).FirstOrDefault();
                        db_smp.Entry(tb_user).State = EntityState.Deleted;
                        db_smp.SaveChanges();
                        toast.txtCaption.Text = "has been deleted Employee";
                        toast.Show();
                        UpdateData();
                    }
                }
                catch
                {
                    //    frmdialog.txtCaption.Text = "There is no purchase to delete";
                    //    frmdialog.Width = this.Width;
                    //    frmdialog.Show();
                }
            }
            else
            {
                dlg.txtCaption.Text = "There is no employee to delete it";
                dlg.Width = this.Width;
                dlg.Show();

            }
        }

        private void btnreload_Click(object sender, EventArgs e)
        {
            UpdateData();
        }
        public void UpdateData()
        {
            db_smp = new DB_SMP();
            gridControltable.DataSource = db_smp.TB_User.ToList();
        }

        private void btnsearch_Click(object sender, EventArgs e)
        {
            var _search = txtsearch.Text;

            gridControltable.DataSource = db_smp.TB_User.Where(x => x.User_Name.Contains(_search)).ToList();
        }
    }
}
